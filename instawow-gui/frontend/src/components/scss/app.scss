@use "sass:color";

@use "vars";

:root {
  --base-color: #{vars.$base-color-light};
  --base-color-tone-a: #{color.adjust(vars.$base-color-light, $lightness: 5%, $space: hsl)};
  --base-color-tone-a-alpha-85: #{rgba(
      color.adjust(vars.$base-color-light, $lightness: 5%, $space: hsl),
      0.85
    )};
  --base-color-tone-b: #{rgba(vars.$inverse-color-light, 0.1)};
  --base-color-alpha-65: #{rgba(vars.$base-color-light, 0.65)};
  --inverse-color: #{vars.$inverse-color-light};
  --inverse-color-alpha-05: #{rgba(vars.$inverse-color-light, 0.05)};
  --inverse-color-alpha-10: #{rgba(vars.$inverse-color-light, 0.1)};
  --inverse-color-alpha-20: #{rgba(vars.$inverse-color-light, 0.2)};
  --inverse-color-tone-a: #{color.adjust(vars.$inverse-color-light, $lightness: 10%, $space: hsl)};
  --inverse-color-tone-b: #{color.adjust(vars.$inverse-color-light, $lightness: 20%, $space: hsl)};
  --dropdown-arrow: #{vars.generate-dropdown-arrow(vars.$inverse-color-light)};
  --alert-background-color: #{rgba(salmon, 0.5)};
}

@media (prefers-color-scheme: dark) {
  :root {
    --base-color: #{vars.$base-color-dark};
    --base-color-tone-a: #{color.adjust(vars.$base-color-dark, $lightness: -3%)};
    --base-color-tone-a-alpha-85: #{rgba(
        color.adjust(vars.$base-color-dark, $lightness: -2%),
        0.85
      )};
    --base-color-tone-b: #{color.adjust(vars.$base-color-dark, $lightness: -10%)};
    --base-color-alpha-65: #{rgba(vars.$base-color-dark, 0.65)};
    --inverse-color: #{vars.$inverse-color-dark};
    --inverse-color-alpha-05: #{rgba(vars.$inverse-color-dark, 0.05)};
    --inverse-color-alpha-10: #{rgba(vars.$inverse-color-dark, 0.1)};
    --inverse-color-alpha-20: #{rgba(vars.$inverse-color-dark, 0.2)};
    --inverse-color-tone-a: #{color.adjust(vars.$inverse-color-dark, $lightness: -5%)};
    --inverse-color-tone-b: #{color.adjust(vars.$inverse-color-dark, $lightness: -10%)};
    --dropdown-arrow: #{vars.generate-dropdown-arrow(vars.$inverse-color-dark)};
  }
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

:root {
  color-scheme: light dark;
}

:focus {
  outline-style: none; // Revisit for a11y
}

body {
  color: var(--inverse-color);
  margin: 0;
  font-family: -apple-system, system-ui;
  overflow: hidden; // Prevent rubber banding on macOS
}

input,
button,
select,
textarea {
  font: inherit;
  background-color: inherit;
  color: inherit;
}

a {
  text-decoration: none;
}

button[role="link"] {
  background-color: var(--inverse-color-alpha-05);
  margin: 0;
  padding: 0 0.2rem;
  border: none;
  border-radius: 3px;
  cursor: pointer;
  transition: background-color 0.2s;

  &:hover {
    background-color: var(--inverse-color-alpha-10);
  }
}

menu,
nav {
  -webkit-user-select: none;
  user-select: none;
}

select {
  -webkit-appearance: none;
  appearance: none;

  &:disabled {
    pointer-events: none;
  }
}

code {
  -webkit-user-select: text;
  user-select: text;
}

.modal {
  @extend %pop-out;
  background: none;
  position: unset;
  max-width: 75vw;
  padding: 0;
  border: 0;
  color: var(--inverse-color);

  .content,
  .title-bar {
    padding: 1.25rem;
    background-color: var(--base-color-alpha-65);
  }

  .title-bar {
    padding: 0.65rem 1.25rem;
    border-radius: vars.$standard-border-radius vars.$standard-border-radius 0 0;
    background-color: var(--inverse-color-alpha-10);
    font-size: 0.9em;
    font-weight: 600;
  }

  .content {
    border-radius: 0 0 vars.$standard-border-radius vars.$standard-border-radius;

    &:first-child {
      border-radius: vars.$standard-border-radius;
    }
  }

  label {
    line-height: vars.$modal-form-el-line-height;
  }

  .form-control {
    display: flex;
    align-items: center;
    width: 100%;
    line-height: vars.$modal-form-el-line-height;
    margin: 0;
    padding: 0 0.5em;
    border: 0;
    border-radius: vars.$modal-edge-border-radius;
    background-color: var(--inverse-color-alpha-10);
    transition: background-color 0.2s;

    &:disabled {
      opacity: 0.5;
    }

    &:focus {
      background-color: var(--inverse-color-alpha-20);
    }

    &.error {
      background-color: salmon;
    }

    .icon {
      height: 1rem;
      width: 1rem;
      fill: var(--inverse-color-tone-b);
      vertical-align: text-bottom;
    }
  }

  button.form-control {
    justify-content: center;
    font-weight: 500;

    &.primary,
    &[type="submit"] {
      background-color: vars.$action-button-bg-color;
      color: vars.$action-button-text-color;

      &:focus {
        background-color: vars.$action-button-focus-bg-color;
      }
    }
  }

  select.form-control {
    min-width: 12rem;

    &:not([multiple]) {
      padding-right: 1.25rem;
      background-image: var(--dropdown-arrow);
      background-size: 10px;
      background-repeat: no-repeat;
      background-position: top 9px right 7px;
    }

    &[multiple] {
      padding-top: 0.35rem;
      padding-bottom: 0.35rem;
    }
  }

  .row + .row {
    margin-top: 0.5rem;
  }

  .input-array {
    display: flex;

    .form-control {
      margin: 0;
      border-radius: vars.$modal-middle-border-radius;

      + button,
      + input {
        margin-left: 4px;
      }
    }

    button.form-control {
      width: auto;
    }

    > :first-child {
      flex-grow: 1;
      border-top-left-radius: vars.$modal-edge-border-radius;
      border-bottom-left-radius: vars.$modal-edge-border-radius;
    }

    > :last-child {
      border-top-right-radius: vars.$modal-edge-border-radius;
      border-bottom-right-radius: vars.$modal-edge-border-radius;
    }
  }

  .error-text {
    line-height: 1;
    color: salmon;
    font-size: 0.9em;

    :not(:first-child) {
      padding-top: 0.25rem;
    }
  }
}
